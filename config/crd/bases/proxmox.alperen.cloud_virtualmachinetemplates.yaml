---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: virtualmachinetemplates.proxmox.alperen.cloud
spec:
  group: proxmox.alperen.cloud
  names:
    kind: VirtualMachineTemplate
    listKind: VirtualMachineTemplateList
    plural: virtualmachinetemplates
    singular: virtualmachinetemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VirtualMachineTemplate is the Schema for the virtualmachinetemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VirtualMachineTemplateSpec defines the desired state of VirtualMachineTemplate
            properties:
              cloudInitConfig:
                description: Cloud Init Config
                properties:
                  dnsDomain:
                    description: DNS Domain
                    type: string
                  dnsServers:
                    description: DNS Servers
                    items:
                      type: string
                    type: array
                  ipConfig:
                    description: IPConfig is the IP configuration for the VM
                    properties:
                      cidr:
                        description: Subnet Mask
                        type: string
                      gateway:
                        description: Gateway
                        type: string
                      gatewayIPv6:
                        description: GatewayIPv6
                        type: string
                      ip:
                        description: IP Address
                        type: string
                      ipv6:
                        description: IPv6 Address
                        type: string
                    type: object
                  password:
                    description: Password is the password for the template
                    type: string
                  sshKeys:
                    description: SSH Keys -- suppose to be on openSSH format
                    items:
                      type: string
                    type: array
                  upgradePackages:
                    default: true
                    description: Upgrade Packages
                    type: boolean
                  user:
                    description: User is the user name for the template
                    type: string
                type: object
              imageConfig:
                description: Image config
                properties:
                  checksum:
                    description: Optional fields
                    type: string
                  checksumAlgorithm:
                    type: string
                  compression:
                    type: string
                  content:
                    pattern: \b(iso|vztmpl)\b
                    type: string
                  filename:
                    type: string
                  node:
                    type: string
                  storage:
                    default: local
                    type: string
                  url:
                    type: string
                  verifyCertificate:
                    type: boolean
                required:
                - content
                - filename
                - node
                - url
                type: object
              name:
                description: Name is the name of the VM
                type: string
              node:
                description: NodeName is the node name
                type: string
              virtualMachineConfig:
                description: VirtualMachineConfig is the configuration of the VM
                properties:
                  cores:
                    default: 2
                    description: Cores
                    type: integer
                  memory:
                    default: 2048
                    description: Memory as MB
                    type: integer
                  network:
                    properties:
                      bridge:
                        default: vmbr0
                        type: string
                      model:
                        default: virtio
                        type: string
                    type: object
                  sockets:
                    default: 1
                    description: Sockets
                    type: integer
                type: object
            required:
            - imageConfig
            - name
            - node
            type: object
          status:
            description: VirtualMachineTemplateStatus defines the observed state of
              VirtualMachineTemplate
            properties:
              condition:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              status:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
